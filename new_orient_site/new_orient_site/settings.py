"""
Django settings for new_orient_site project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import requests


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-t+3vf4ln4+y@nyp-fdfg+r$1-@ebyv0w)(%*)r5)y74&6kr7%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['aa394c0818bc4c5387661b61738e3cfc.vfs.cloud9.ap-southeast-1.amazonaws.com','54.255.250.104','ec2-54-255-250-104.ap-southeast-1.compute.amazonaws.com']

EC2_PUBLIC_HOSTNAME = None
EC2_PUBLIC_IP = None

try:
    EC2_PUBLIC_HOSTNAME = requests.get(
        'http://169.254.169.254/latest/meta-data/public-hostname',
        timeout=0.1).text
except requests.exceptions.RequestException:
    pass
try:
    EC2_PUBLIC_IP = requests.get(
        'http://169.254.169.254/latest/meta-data/public-ipv4',
        timeout=0.1).text
except requests.exceptions.RequestException:
    pass

if EC2_PUBLIC_HOSTNAME:
    ALLOWED_HOSTS.append(EC2_PUBLIC_HOSTNAME)
if EC2_PUBLIC_IP:
    ALLOWED_HOSTS.append(EC2_PUBLIC_IP)


# デフォルトで用いるカスタムユーザモデルの指定
AUTH_USER_MODEL = 'new_orient.User'

# Application definition

INSTALLED_APPS = [
#    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jquery',
    'bootstrap4',
    'new_orient'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'new_orient_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['new_orient/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'new_orient_site.context_processors.static_root',
                'new_orient_site.context_processors.base_dir',
            ],
            'builtins': [
                'bootstrap4.templatetags.bootstrap4',  # ←←← これを追加
            ],
        },
    },
]

WSGI_APPLICATION = 'new_orient_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'new_orient_db',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
        'OPTIONS': {
            'charset': 'utf8mb4',
            'sql_mode': 'TRADITIONAL,NO_AUTO_VALUE_ON_ZERO,ONLY_FULL_GROUP_BY',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
#    os.path.join(BASE_DIR, 'static/new_orient'),
#    os.path.join(BASE_DIR, 'static/new_orient/javascript'),
#    os.path.join(BASE_DIR, 'static/new_orient/style'),
)
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

import logging

# For debugging 
if DEBUG:
  # will output to your console
  logging.basicConfig(
    level = logging.DEBUG,
    format = '%(asctime)s %(levelname)s %(message)s',
  )
else:
  # will output to logging file
  logging.basicConfig(
    level = logging.DEBUG,
    format = '%(asctime)s %(levelname)s %(message)s',
    filename = '/my_log_file.log',
    filemode = 'a'
  )

# ログイン・ログアウト機能の実装   
LOGIN_URL = 'new_orient:login'
LOGIN_REDIRECT_URL = 'new_orient:home'
